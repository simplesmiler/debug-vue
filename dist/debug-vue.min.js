!function(e){"use strict";function t(e){e.component("debug-hook",o),e.component("debug-watch",a)}var n={props:{name:{type:String},value:{},noClone:{type:Boolean,default:!1},noLog:{type:Boolean,default:!1},noBreak:{type:Boolean,default:!1}},render:function(e){return null},methods:{_logname:function(e){return this.name?"<"+e+' name="'+this.name+'">':"<"+e+">"},_prepareValue:function(e){if(this.noClone)return e;try{return JSON.parse(JSON.stringify(e))}catch(t){return e}}}},o={props:{on:{type:[String,Array],default:"mounted"},parent:{type:Boolean,default:!1}},mixins:[n],computed:{realOn:function(){return Array.isArray(this.on)?this.on:[this.on]},realTarget:function(){return this.parent?this.$parent:this}},created:function(){this.handles={};for(var e=0;e<this.realOn.length;e++){var t=this.realOn[e],n=this.handles[t]=this._makeHandle(t);this.realTarget.$on("hook:"+t,n)}},destroyed:function(){for(var e=0;e<this.realOn.length;e++){var t=this.realOn[e],n=this.handles[t];this.realTarget.$off("hook:"+t,n)}},methods:{_makeHandle:function(e){return function(){this.handle(this.$el,this._logname("debug-hook"),e,this._prepareValue(this.value))}.bind(this)},handle:function(e,t,n,o){this.noLog||console.log(t,n,o),this.noBreak}}},a={props:{immediate:{type:Boolean,default:!1},deep:{type:Boolean,default:!1}},mixins:[n],created:function(){this.$watch("value",this._handle,{immediate:this.immediate,deep:this.deep})},methods:{_handle:function(e,t){this.handle(this.$el,this._logname("debug-watch"),this._prepareValue(e),this._prepareValue(t))},handle:function(e,t,n,o){this.noLog||console.log(t,o,"->",n),this.noBreak}}};"undefined"!=typeof window&&window.Vue&&window.Vue.use(t),e.version="0.1.0",e.default=t}(this.DebugVue={});